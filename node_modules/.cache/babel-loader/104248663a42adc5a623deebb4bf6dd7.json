{"ast":null,"code":"import _defineProperty from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kashif/Prime/Leather_solo/src/views/AddProduct/AddProduct.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // Material UI imports\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport classNames from \"classnames\";\nimport { Typography } from \"@material-ui/core\"; // Material UI Styles defined here\n\nvar styles = function styles(theme) {\n  return {\n    textField: {\n      marginTop: 2,\n      marginBottom: 2\n    },\n    menu: {\n      width: 200\n    },\n    button: {\n      margin: 0,\n      width: 120,\n      float: \"right\"\n    },\n    icon: {\n      fontSize: 20,\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    typography: {\n      useNextVariants: true\n    }\n  };\n};\n\nvar AddProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddProduct, _Component);\n\n  function AddProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\",\n      firstName: new Date(),\n      lastName: \"\",\n      company: \"\",\n      addressStreet: \"\",\n      description: \"\"\n    };\n\n    _this.componentDidMount = function () {\n      _this.props.dispatch({\n        type: \"FETCH_TAGS\"\n      });\n    };\n\n    _this.handleChange = function (property) {\n      return function (event) {\n        _this.setState(_objectSpread({}, _this.state, _defineProperty({}, property, event.target.value)));\n      };\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.dispatch({\n        type: \"POST_PROJECT\",\n        payload: _this.state\n      });\n\n      _this.setState({\n        name: \"\",\n        selectedDate: new Date(),\n        selectedTag: \"\",\n        gitHubUrl: \"\",\n        websiteUrl: \"\",\n        description: \"\"\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        selectedDate: date\n      });\n    };\n\n    _this.alertMessage = function () {\n      var classes = _this.props.classes;\n\n      if (_this.props.confirmPost.status) {\n        return React.createElement(\"span\", {\n          id: \"message-id\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(CheckCircleIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }), \"Project Successfully Added!\");\n      } else {\n        return React.createElement(\"span\", {\n          id: \"message-id\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(ErrorIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), \"Project add was unsuccessful\");\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.props.dispatch({\n        type: \"RESET_POST\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddProduct, [{\n    key: \"render\",\n    // renders form\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, null, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Add New Project\")), React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        onError: function onError(errors) {\n          return console.log(errors);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"name\",\n        label: \"* Name\",\n        fullWidth: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"name\"),\n        name: \"name\",\n        type: \"text\",\n        margin: \"normal\",\n        value: this.state.name,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        margin: \"normal\",\n        label: \"* Date\",\n        fullWidth: true,\n        value: this.state.selectedDate,\n        onChange: this.handleDateChange,\n        className: classNames(classes.textField),\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"tag\",\n        select: true,\n        fullWidth: true,\n        label: \"* Select a tag\",\n        className: classes.textField,\n        value: this.state.selectedTag,\n        onChange: this.handleChange(\"selectedTag\"),\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"))}\")), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"github\",\n        label: \"* GitHub URL\",\n        fullWidth: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"gitHubUrl\"),\n        name: \"gitHubUrl\",\n        type: \"url\",\n        margin: \"normal\" // helperText=\"*required\"\n        ,\n        value: this.state.gitHubUrl,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"website\",\n        label: \"Website URL\",\n        fullWidth: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"websiteUrl\"),\n        name: \"websiteUrl\",\n        type: \"url\",\n        margin: \"normal\",\n        value: this.state.websiteUrl,\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"description\",\n        label: \"Description\",\n        multiline: true,\n        fullWidth: true,\n        rowsMax: \"4\",\n        type: \"text\",\n        value: this.state.description,\n        onChange: this.handleChange(\"description\"),\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        style: {\n          margin: \"0\",\n          fontWeight: \"lighter\",\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"* required\")), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Submit\")))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        open: this.props.confirmPost.open,\n        autoHideDuration: 6000,\n        onClose: this.handleClose,\n        ContentProps: {\n          \"aria-describedby\": \"message-id\"\n        },\n        message: this.alertMessage(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return AddProduct;\n}(Component);\n\nvar mapReduxStateToProps = function mapReduxStateToProps(reduxState) {\n  return reduxState;\n};\n\nexport default withStyles(styles)(connect(mapReduxStateToProps)(AddProduct));","map":{"version":3,"sources":["/Users/kashif/Prime/Leather_solo/src/views/AddProduct/AddProduct.jsx"],"names":["React","Component","connect","withStyles","Grid","Snackbar","DateFnsUtils","Button","CheckCircleIcon","ErrorIcon","MuiPickersUtilsProvider","DatePicker","ValidatorForm","TextValidator","MenuItem","classNames","Typography","styles","theme","textField","marginTop","marginBottom","menu","width","button","margin","float","icon","fontSize","opacity","marginRight","spacing","unit","typography","useNextVariants","AddProduct","state","email","firstName","Date","lastName","company","addressStreet","description","componentDidMount","props","dispatch","type","handleChange","property","event","setState","target","value","handleSubmit","payload","name","selectedDate","selectedTag","gitHubUrl","websiteUrl","handleDateChange","date","alertMessage","classes","confirmPost","status","display","alignItems","handleClose","errors","console","log","MenuProps","className","fontWeight","fontStyle","vertical","horizontal","open","mapReduxStateToProps","reduxState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// Material UI imports\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport classNames from \"classnames\";\nimport { Typography } from \"@material-ui/core\";\n\n// Material UI Styles defined here\nconst styles = theme => ({\n  textField: {\n    marginTop: 2,\n    marginBottom: 2\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: 0,\n    width: 120,\n    float: \"right\"\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nclass AddProduct extends Component {\n\n  // CREATE TABLE \"customer\" (\n\t// \"customer_id\" serial NOT NULL,\n\t// \"customer_email\" varchar(20) NOT NULL,\n\t// \"customer_first_name\" varchar(200) NOT NULL,\n\t// \"customer_last_name\" varchar(200),\n\t// \"customer_company\" varchar(200),\n\t// \"customer_address_street\" varchar(80) NOT NULL,\n\t// \"customer_address_apt\" varchar(10),\n\t// \"customer_address_city\" varchar(10) NOT NULL,\n\t// \"customer_address_state\" varchar(10) NOT NULL,\n\t// \"customer_address_zip\"\n  state = {\n   email: \"\",\n  firstName: new Date(),\n    lastName: \"\",\n    company: \"\",\n    addressStreet: \"\",\n    description: \"\"\n  };\n\n  // send fetch dispatch to redux which will return all items from 'tags' table on database\n  componentDidMount = () => {\n    this.props.dispatch({ type: \"FETCH_TAGS\" });\n  };\n\n  // handles on inputs on form and sets state\n  handleChange = property => event => {\n    this.setState({\n      ...this.state,\n      [property]: event.target.value\n    });\n  };\n\n  // handles form submit button, sends post dispatch to redux with payload of all selected form inputs + clears form\n  handleSubmit = () => {\n    this.props.dispatch({ type: \"POST_PROJECT\", payload: this.state });\n    this.setState({\n      name: \"\",\n      selectedDate: new Date(),\n      selectedTag: \"\",\n      gitHubUrl: \"\",\n      websiteUrl: \"\",\n      description: \"\"\n    });\n  };\n\n  // handles date select from date-picker\n  handleDateChange = date => {\n    this.setState({\n      selectedDate: date\n    });\n  };\n\n  // determines which message will display on snackbar depending if post to database was successful\n  alertMessage = () => {\n    const { classes } = this.props;\n    if (this.props.confirmPost.status) {\n      return (\n        <span id=\"message-id\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <CheckCircleIcon className={classes.icon} />\n          Project Successfully Added!\n        </span>\n      );\n    } else {\n      return (\n        <span id=\"message-id\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <ErrorIcon className={classes.icon} />\n          Project add was unsuccessful\n        </span>\n      );\n    }\n  };\n\n  // handles close from snackbar and sends reset dispatch to redux\n  handleClose = () => {\n    this.props.dispatch({ type: \"RESET_POST\" });\n  };\n\n  // renders form\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n        <Typography>\n          <h2>Add New Project</h2>\n        </Typography>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => console.log(errors)}\n        >\n          <Grid container spacing={8}>\n            <Grid item xs={12} sm={5}>\n              <TextValidator\n                id=\"name\"\n                label=\"* Name\"\n                fullWidth\n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"name\")}\n                name=\"name\"\n                type=\"text\"\n                margin=\"normal\"\n                value={this.state.name}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={6} sm={3}>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <DatePicker\n                  margin=\"normal\"\n                  label=\"* Date\"\n                  fullWidth\n                  value={this.state.selectedDate}\n                  onChange={this.handleDateChange}\n                  className={classNames(classes.textField)}\n                  variant=\"outlined\"\n                />\n              </MuiPickersUtilsProvider>\n            </Grid>\n            <Grid item xs={6} sm={4}>\n              <TextValidator\n                id=\"tag\"\n                select\n                fullWidth\n                label=\"* Select a tag\"\n                className={classes.textField}\n                value={this.state.selectedTag}\n                onChange={this.handleChange(\"selectedTag\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                margin=\"normal\"\n                variant=\"outlined\"\n              >\n                {/* {this.props.tags.map(option => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem> */}\n                ))}\n              </TextValidator>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextValidator\n                id=\"github\"\n                label=\"* GitHub URL\"\n                fullWidth\n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"gitHubUrl\")}\n                name=\"gitHubUrl\"\n                type=\"url\"\n                margin=\"normal\"\n                // helperText=\"*required\"\n                value={this.state.gitHubUrl}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextValidator\n                id=\"website\"\n                label=\"Website URL\"\n                fullWidth\n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"websiteUrl\")}\n                name=\"websiteUrl\"\n                type=\"url\"\n                margin=\"normal\"\n                value={this.state.websiteUrl}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextValidator\n                id=\"description\"\n                label=\"Description\"\n                multiline\n                fullWidth\n                rowsMax=\"4\"\n                type=\"text\"\n                value={this.state.description}\n                onChange={this.handleChange(\"description\")}\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={4} sm={2}>\n              <h5\n                style={{\n                  margin: \"0\",\n                  fontWeight: \"lighter\",\n                  fontStyle: \"italic\"\n                }}\n              >\n                * required\n              </h5>\n            </Grid>\n            <Grid item xs={8} sm={10}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                className={classes.button}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.props.confirmPost.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={this.alertMessage()}\n        />\n      </>\n    );\n  }\n}\nconst mapReduxStateToProps = reduxState => {\n  return reduxState;\n};\n\nexport default withStyles(styles)(connect(mapReduxStateToProps)(AddProduct));\n"]},"metadata":{},"sourceType":"module"}