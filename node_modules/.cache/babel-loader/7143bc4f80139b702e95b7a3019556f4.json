{"ast":null,"code":"import _defineProperty from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kashif/Prime/Leather_solo/src/views/AddProduct/AddProduct.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // Material UI imports\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport classNames from \"classnames\";\nimport { Typography } from \"@material-ui/core\"; // Material UI Styles defined here\n\nvar styles = function styles(theme) {\n  return {\n    textField: {\n      marginTop: 2,\n      marginBottom: 2\n    },\n    menu: {\n      width: 200\n    },\n    button: {\n      margin: 0,\n      width: 120,\n      float: \"right\"\n    },\n    icon: {\n      fontSize: 20,\n      opacity: 0.9,\n      marginRight: theme.spacing.unit\n    },\n    typography: {\n      useNextVariants: true\n    }\n  };\n};\n\nvar AddProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddProduct, _Component);\n\n  function AddProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      description: \"\",\n      price: 0,\n      shortAttr: \"\",\n      quantity: \"\",\n      selectedCollection: \"\"\n    };\n\n    _this.componentDidMount = function () {\n      _this.props.dispatch({\n        type: \"FETCH_PRODUCTS\"\n      });\n    };\n\n    _this.handleChange = function (property) {\n      return function (event) {\n        _this.setState(_objectSpread({}, _this.state, _defineProperty({}, property, event.target.value)));\n      };\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.dispatch({\n        type: \"POST_PRODUCT\",\n        payload: _this.state\n      });\n\n      _this.setState({\n        description: \"\",\n        price: 0,\n        shortAttr: \"\",\n        quantity: \"\",\n        selectedCollection: \"\"\n      });\n    };\n\n    _this.handleDateChange = function (date) {\n      _this.setState({\n        selectedDate: date\n      });\n    };\n\n    _this.alertMessage = function () {\n      var classes = _this.props.classes;\n\n      if (_this.props.confirmPost.status) {\n        return React.createElement(\"span\", {\n          id: \"message-id\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(CheckCircleIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }), \"Product Successfully Added!\");\n      } else {\n        return React.createElement(\"span\", {\n          id: \"message-id\",\n          style: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(ErrorIcon, {\n          className: classes.icon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }), \"Product add was unsuccessful\");\n      }\n    };\n\n    _this.handleClose = function () {\n      _this.props.dispatch({\n        type: \"RESET_POST\"\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddProduct, [{\n    key: \"render\",\n    // renders form\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, null, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Add New Product\")), React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleSubmit,\n        onError: function onError(errors) {\n          return console.log(errors);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"title\",\n        label: \"* Product Title\",\n        fullWidth: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"title\"),\n        name: \"title\",\n        type: \"text\",\n        margin: \"normal\",\n        value: this.state.product_short_attr,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"description\",\n        label: \"* Product Description\",\n        fullWidth: true,\n        multiline: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"description\"),\n        name: \"description\",\n        type: \"text\",\n        margin: \"normal\",\n        value: this.state.product_description,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"selectedcollection\",\n        select: true,\n        fullWidth: true,\n        label: \"* Select Collection\",\n        className: classes.textField,\n        value: this.state.selectedTag,\n        onChange: this.handleChange(\"selectedcollection\"),\n        SelectProps: {\n          MenuProps: {\n            className: classes.menu\n          }\n        },\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"price\",\n        label: \"* Price\",\n        fullWidth: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"price\"),\n        name: \"price\",\n        type: \"text\",\n        margin: \"normal\",\n        value: this.state.product_price,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        id: \"qty\",\n        label: \"* Quantity\",\n        fullWidth: true,\n        className: classNames(classes.textField),\n        onChange: this.handleChange(\"qty\"),\n        name: \"qty\",\n        type: \"text\",\n        margin: \"normal\",\n        value: this.state.product_qty,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        style: {\n          margin: \"0\",\n          fontWeight: \"lighter\",\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"* required\")), React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        className: classes.button,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return AddProduct;\n}(Component);\n\nvar mapReduxStateToProps = function mapReduxStateToProps(reduxState) {\n  return reduxState;\n};\n\nexport default withStyles(styles)(connect(mapReduxStateToProps)(AddProduct));","map":{"version":3,"sources":["/Users/kashif/Prime/Leather_solo/src/views/AddProduct/AddProduct.jsx"],"names":["React","Component","connect","withStyles","Grid","Snackbar","DateFnsUtils","Button","CheckCircleIcon","ErrorIcon","MuiPickersUtilsProvider","DatePicker","ValidatorForm","TextValidator","MenuItem","classNames","Typography","styles","theme","textField","marginTop","marginBottom","menu","width","button","margin","float","icon","fontSize","opacity","marginRight","spacing","unit","typography","useNextVariants","AddProduct","state","description","price","shortAttr","quantity","selectedCollection","componentDidMount","props","dispatch","type","handleChange","property","event","setState","target","value","handleSubmit","payload","handleDateChange","date","selectedDate","alertMessage","classes","confirmPost","status","display","alignItems","handleClose","errors","console","log","product_short_attr","product_description","selectedTag","MenuProps","className","product_price","product_qty","fontWeight","fontStyle","mapReduxStateToProps","reduxState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// Material UI imports\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"material-ui-pickers\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport classNames from \"classnames\";\nimport { Typography } from \"@material-ui/core\";\n\n// Material UI Styles defined here\nconst styles = theme => ({\n  textField: {\n    marginTop: 2,\n    marginBottom: 2\n  },\n  menu: {\n    width: 200\n  },\n  button: {\n    margin: 0,\n    width: 120,\n    float: \"right\"\n  },\n  icon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing.unit\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nclass AddProduct extends Component {\n//   \"product_id\" serial NOT NULL,\n// \t\"product_description\" TEXT NOT NULL,\n// \t\"product_price\" money NOT NULL,\n// \t\"product_short_attr\" varchar(200),\n// \t\"collection_id\" bigint NOT NULL,\n// \t\"product_qty\" int NOT NULL,\n  state = {\n    description: \"\",\n    price: 0,\n    shortAttr: \"\",\n    quantity: \"\",\n    selectedCollection:\"\"\n  };\n\n  // send fetch dispatch to redux which will return all items from 'tags' table on database\n  componentDidMount = () => {\n    this.props.dispatch({ type: \"FETCH_PRODUCTS\" });\n  };\n\n  // handles on inputs on form and sets state\n  handleChange = property => event => {\n    this.setState({\n      ...this.state,\n      [property]: event.target.value\n    });\n  };\n\n  // handles form submit button, sends post dispatch to redux with payload of all selected form inputs + clears form\n  handleSubmit = () => {\n    this.props.dispatch({ type: \"POST_PRODUCT\", payload: this.state });\n    this.setState({\n      description: \"\",\n      price: 0,\n      shortAttr: \"\",\n      quantity: \"\",\n      selectedCollection: \"\"\n    });\n  };\n\n  // handles date select from date-picker\n  handleDateChange = date => {\n    this.setState({\n      selectedDate: date\n    });\n  };\n\n  // determines which message will display on snackbar depending if post to database was successful\n  alertMessage = () => {\n    const { classes } = this.props;\n    if (this.props.confirmPost.status) {\n      return (\n        <span id=\"message-id\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <CheckCircleIcon className={classes.icon} />\n          Product Successfully Added!\n        </span>\n      );\n    } else {\n      return (\n        <span id=\"message-id\" style={{ display: \"flex\", alignItems: \"center\" }}>\n          <ErrorIcon className={classes.icon} />\n          Product add was unsuccessful\n        </span>\n      );\n    }\n  };\n\n  // handles close from snackbar and sends reset dispatch to redux\n  handleClose = () => {\n    this.props.dispatch({ type: \"RESET_POST\" });\n  };\n\n  // renders form\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n        <Typography>\n          <h2>Add New Product</h2>\n        </Typography>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => console.log(errors)}\n        >\n          <Grid container spacing={8}>\n            <Grid item xs={12} sm={5}>\n              <TextValidator\n                id=\"title\"\n                label=\"* Product Title\"\n                fullWidth\n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"title\")}\n                name=\"title\"\n                type=\"text\"\n                margin=\"normal\"\n                value={this.state.product_short_attr}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={5}>\n              <TextValidator\n                id=\"description\"\n                label=\"* Product Description\"\n                fullWidth\n                multiline={true}\n                \n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"description\")}\n                name=\"description\"\n                type=\"text\"\n                margin=\"normal\"\n                value={this.state.product_description}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            \n            <Grid item xs={6} sm={4}>\n              <TextValidator\n                id=\"selectedcollection\"\n                select\n                fullWidth\n                label=\"* Select Collection\"\n                className={classes.textField}\n                value={this.state.selectedTag}\n                onChange={this.handleChange(\"selectedcollection\")}\n                SelectProps={{\n                  MenuProps: {\n                    className: classes.menu\n                  }\n                }}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                margin=\"normal\"\n                variant=\"outlined\"\n              >\n                {/* {this.props.collections.map(option => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.name}\n                  </MenuItem> */}\n              </TextValidator>\n            </Grid>\n            <Grid item xs={12} sm={5}>\n              <TextValidator\n                id=\"price\"\n                label=\"* Price\"\n                fullWidth\n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"price\")}\n                name=\"price\"\n                type=\"text\"\n                margin=\"normal\"\n                value={this.state.product_price}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={5}>\n              <TextValidator\n                id=\"qty\"\n                label=\"* Quantity\"\n                fullWidth\n                className={classNames(classes.textField)}\n                onChange={this.handleChange(\"qty\")}\n                name=\"qty\"\n                type=\"text\"\n                margin=\"normal\"\n                value={this.state.product_qty}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item xs={4} sm={2}>\n              <h5\n                style={{\n                  margin: \"0\",\n                  fontWeight: \"lighter\",\n                  fontStyle: \"italic\"\n                }}\n              >\n                * required\n              </h5>\n            </Grid>\n            <Grid item xs={8} sm={10}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                className={classes.button}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </ValidatorForm>\n        {/* <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.props.confirmPost.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={this.alertMessage()}\n        /> */}\n      </>\n    );\n  }\n}\nconst mapReduxStateToProps = reduxState => {\n  return reduxState;\n};\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(AddProduct)\n);\n"]},"metadata":{},"sourceType":"module"}