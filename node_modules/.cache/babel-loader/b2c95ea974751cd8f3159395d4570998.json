{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchProducts),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(deleteProduct),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(postProduct),\n    _marked4 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(productsSaga);\n\nimport axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\nfunction fetchProducts() {\n  var products;\n  return _regeneratorRuntime.wrap(function fetchProducts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"/products\");\n\n        case 3:\n          products = _context.sent;\n          console.log('this is fetch products', products.data);\n          _context.next = 7;\n          return put({\n            type: \"SET_PRODUCTS\",\n            payload: products.data\n          });\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"couldn't fetch products\", _context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n} //end axios DELETE request to server and re-fetch all items from 'products' table on database\n\n\nfunction deleteProduct(action) {\n  return _regeneratorRuntime.wrap(function deleteProduct$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.delete(\"/project/\" + action.payload);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: \"FETCH_PRODUCTS\"\n          });\n\n        case 5:\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"couldn't delete product\", _context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n} // send axios POST request to server with payload from 'AdminForm' submit and re-fetch all items from 'projects' table\n// depending on whether item was successfully added to database a 'true' or 'false' payload will be sent to the 'confirmPost' reducer\n// to deteremine which message will be shown on admin snackbar\n\n\nfunction postProduct(action) {\n  return _regeneratorRuntime.wrap(function postProduct$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return axios.post(\"/project\", action.payload);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: \"FETCH_PRODUCTS\"\n          });\n\n        case 5:\n          _context3.next = 7;\n          return put({\n            type: \"CONFIRM_POST\",\n            payload: true\n          });\n\n        case 7:\n          _context3.next = 14;\n          break;\n\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 13;\n          return put({\n            type: \"CONFIRM_POST\",\n            payload: false\n          });\n\n        case 13:\n          console.log(\"couldn't add product\", _context3.t0);\n\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\n\nfunction productsSaga() {\n  return _regeneratorRuntime.wrap(function productsSaga$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(\"FETCH_PRODUCTS\", fetchProducts);\n\n        case 2:\n          _context4.next = 4;\n          return takeEvery(\"POST_PRODUCT\", postProduct);\n\n        case 4:\n          _context4.next = 6;\n          return takeEvery(\"DELETE_PRODUCT\", deleteProduct);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nexport default productsSaga;","map":{"version":3,"sources":["/Users/kashif/Prime/Leather_solo/src/redux/sagas/productsSaga.js"],"names":["fetchProducts","deleteProduct","postProduct","productsSaga","axios","put","takeEvery","get","products","console","log","data","type","payload","action","delete","post"],"mappings":";;;;yBAIUA,a;;;yBAUAC,a;;;yBAWAC,W;;;yBAUAC,Y;;AAnCV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;;AAGA,SAAUN,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAMI,KAAK,CAACG,GAAN,CAAU,WAAV,CAAN;;AAFrB;AAEUC,UAAAA,QAFV;AAGIC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAqCF,QAAQ,CAACG,IAA9C;AAHJ;AAII,iBAAMN,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAEL,QAAQ,CAACG;AAA1C,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIF,UAAAA,OAAO,CAACC,GAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CASA;;;AACA,SAAUT,aAAV,CAAwBa,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMV,KAAK,CAACW,MAAN,CAAa,cAAcD,MAAM,CAACD,OAAlC,CAAN;;AAFJ;AAAA;AAGI,iBAAMR,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKIH,UAAAA,OAAO,CAACC,GAAR;;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAQA;AACA;AACA;;;AACA,SAAUR,WAAV,CAAsBY,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI,iBAAMV,KAAK,CAACY,IAAN,CAAW,UAAX,EAAuBF,MAAM,CAACD,OAA9B,CAAN;;AAFJ;AAAA;AAGI,iBAAMR,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE;AAAR,WAAD,CAAT;;AAHJ;AAAA;AAII,iBAAMP,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAE;AAAjC,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMI,iBAAMR,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAE;AAAjC,WAAD,CAAT;;AANJ;AAOIJ,UAAAA,OAAO,CAACC,GAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUP,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,SAAS,CAAC,gBAAD,EAAmBN,aAAnB,CAAf;;AADF;AAAA;AAEE,iBAAMM,SAAS,CAAC,cAAD,EAAiBJ,WAAjB,CAAf;;AAFF;AAAA;AAGE,iBAAMI,SAAS,CAAC,gBAAD,EAAmBL,aAAnB,CAAf;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeE,YAAf","sourcesContent":["import axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\n\nfunction* fetchProducts() {\n  try {\n    const products = yield axios.get(\"/products\");\n    console.log('this is fetch products',products.data);\n    yield put({ type: \"SET_PRODUCTS\", payload: products.data });\n  } catch (err) {\n    console.log(`couldn't fetch products`, err);\n  }\n}\n//end axios DELETE request to server and re-fetch all items from 'products' table on database\nfunction* deleteProduct(action) {\n  try {\n    yield axios.delete(\"/project/\" + action.payload);\n    yield put({ type: \"FETCH_PRODUCTS\" });\n  } catch (err) {\n    console.log(`couldn't delete product`, err);\n  }\n}\n// send axios POST request to server with payload from 'AdminForm' submit and re-fetch all items from 'projects' table\n// depending on whether item was successfully added to database a 'true' or 'false' payload will be sent to the 'confirmPost' reducer\n// to deteremine which message will be shown on admin snackbar\nfunction* postProduct(action) {\n  try {\n    yield axios.post(\"/project\", action.payload);\n    yield put({ type: \"FETCH_PRODUCTS\" });\n    yield put({ type: \"CONFIRM_POST\", payload: true });\n  } catch (err) {\n    yield put({ type: \"CONFIRM_POST\", payload: false });\n    console.log(`couldn't add product`, err);\n  }\n}\nfunction* productsSaga() {\n  yield takeEvery(\"FETCH_PRODUCTS\", fetchProducts);\n  yield takeEvery(\"POST_PRODUCT\", postProduct);\n  yield takeEvery(\"DELETE_PRODUCT\", deleteProduct);\n}\n\nexport default productsSaga;"]},"metadata":{},"sourceType":"module"}