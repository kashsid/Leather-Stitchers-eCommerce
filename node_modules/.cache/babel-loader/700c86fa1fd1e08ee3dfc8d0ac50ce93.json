{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(fetchOrders),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(ordersSaga);\n\nimport axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\nfunction fetchOrders() {\n  var products;\n  return _regeneratorRuntime.wrap(function fetchOrders$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.get(\"/products\");\n\n        case 3:\n          products = _context.sent;\n          console.log(\"this is fetch products\", products.data);\n          _context.next = 7;\n          return put({\n            type: \"SET_PRODUCTS\",\n            payload: products.data\n          });\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"couldn't fetch products\", _context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\n\nfunction ordersSaga() {\n  return _regeneratorRuntime.wrap(function ordersSaga$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(\"FETCH_ORDERS\", fetchs);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default productsSaga;","map":{"version":3,"sources":["/Users/kashif/Prime/Leather_solo/src/redux/sagas/ordersSaga.js"],"names":["fetchOrders","ordersSaga","axios","put","takeEvery","get","products","console","log","data","type","payload","fetchs","productsSaga"],"mappings":";;;;yBAGUA,W;;;yBAUAC,U;;AAbV,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;;AAEA,SAAUJ,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEqB,iBAAME,KAAK,CAACG,GAAN,CAAU,WAAV,CAAN;;AAFrB;AAEUC,UAAAA,QAFV;AAGIC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,QAAQ,CAACG,IAA/C;AAHJ;AAII,iBAAMN,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAE,cAAR;AAAwBC,YAAAA,OAAO,EAAEL,QAAQ,CAACG;AAA1C,WAAD,CAAT;;AAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMIF,UAAAA,OAAO,CAACC,GAAR;;AANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUA,SAAUP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMG,SAAS,CAAC,cAAD,EAAiBQ,MAAjB,CAAf;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeC,YAAf","sourcesContent":["import axios from \"axios\";\nimport { put, takeEvery } from \"redux-saga/effects\";\n\nfunction* fetchOrders() {\n  try {\n    const products = yield axios.get(\"/products\");\n    console.log(\"this is fetch products\", products.data);\n    yield put({ type: \"SET_PRODUCTS\", payload: products.data });\n  } catch (err) {\n    console.log(`couldn't fetch products`, err);\n  }\n}\n\nfunction* ordersSaga() {\n  yield takeEvery(\"FETCH_ORDERS\", fetchs);\n  \n}\n\nexport default productsSaga;\n"]},"metadata":{},"sourceType":"module"}