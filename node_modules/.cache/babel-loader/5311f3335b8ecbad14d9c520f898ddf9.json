{"ast":null,"code":"import _classCallCheck from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kashif/Prime/Leather_solo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kashif/Prime/Leather_solo/src/views/AdminDashboard/AdminDashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\"; // Material UI imports\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\"; // defined custom table to be used with Material UI\n\nvar CustomTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.common.white,\n      fontSize: 14\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell); // Defined styles for MUI\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 8,\n      overflowX: \"auto\"\n    },\n    iconHover: {\n      \"&:hover\": {\n        color: theme.palette.primary.main\n      }\n    }\n  };\n};\n\nvar AdminDashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AdminDashboard, _Component);\n\n  function AdminDashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AdminDashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AdminDashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      selectedId: \"\"\n    };\n\n    _this.componentDidMount = function () {\n      _this.props.dispatch({\n        type: \"FETCH_PRODUCTS\"\n      });\n    };\n\n    _this.handleDeleteClick = function (id) {\n      return function () {\n        console.log(\"delete click for id\", id);\n\n        _this.setState({\n          open: true,\n          selectedId: id\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(AdminDashboard, [{\n    key: \"render\",\n    // shows confirmation message before deleting the product from database\n    //   deleteDialog = () => {\n    //     return (\n    //       <Dialog\n    //         open={this.state.open}\n    //         onClose={this.handleClose}\n    //         aria-labelledby=\"alert-dialog-title\"\n    //         aria-describedby=\"alert-dialog-description\"\n    //       >\n    //         <DialogTitle id=\"alert-dialog-title\">{\"Please Confirm\"}</DialogTitle>\n    //         <DialogContent>\n    //           <DialogContentText id=\"alert-dialog-description\">\n    //             Are you sure you want to delete this project from the database?\n    //           </DialogContentText>\n    //         </DialogContent>\n    //         <DialogActions>\n    //           <Button\n    //             onClick={this.handleDeleteConfirm(\"disagree\")}\n    //             color=\"primary\"\n    //           >\n    //             Disagree\n    //           </Button>\n    //           <Button\n    //             onClick={this.handleDeleteConfirm(\"agree\")}\n    //             color=\"primary\"\n    //             autoFocus\n    //           >\n    //             Agree\n    //           </Button>\n    //         </DialogActions>\n    //       </Dialog>\n    //     );\n    //   };\n    //   handleDeleteConfirm = confirmation => () => {\n    //     if (confirmation === \"agree\") {\n    //       console.log(\"clicked agree\");\n    //       this.props.dispatch({\n    //         type: \"DELETE_PROJECT\",\n    //         payload: this.state.selectedId\n    //       });\n    //     }\n    //     this.setState({\n    //       open: false,\n    //       selectedId: \"\"\n    //     });\n    //   };\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, null, React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(CustomTableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Product Name\"), React.createElement(CustomTableCell, {\n        align: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), JSON.stringify(this.state.props.products))));\n    }\n  }]);\n\n  return AdminDashboard;\n}(Component);\n\nvar mapReduxStateToProps = function mapReduxStateToProps(reduxState) {\n  return reduxState;\n};\n\nexport default withStyles(styles)(connect(mapReduxStateToProps)(AdminDashboard));","map":{"version":3,"sources":["/Users/kashif/Prime/Leather_solo/src/views/AdminDashboard/AdminDashboard.js"],"names":["React","Component","connect","withStyles","Table","TableBody","TableCell","TableHead","TableRow","DeleteIcon","Paper","IconButton","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","CustomTableCell","theme","head","backgroundColor","palette","primary","main","color","common","white","fontSize","body","styles","root","width","marginTop","spacing","unit","overflowX","iconHover","AdminDashboard","state","open","selectedId","componentDidMount","props","dispatch","type","handleDeleteClick","id","console","log","setState","classes","table","JSON","stringify","products","mapReduxStateToProps","reduxState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n// Material UI imports\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\n// defined custom table to be used with Material UI\nconst CustomTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.common.white,\n    fontSize: 14\n  },\n  body: {\n    fontSize: 14\n  }\n}))(TableCell);\n\n// Defined styles for MUI\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 8,\n    overflowX: \"auto\"\n  },\n  iconHover: {\n    \"&:hover\": {\n      color: theme.palette.primary.main\n    }\n  }\n});\n\nclass AdminDashboard extends Component {\n  state = {\n    open: false,\n    selectedId: \"\"\n  };\n  // send fetch dispatch to redux which will return all items from 'Products' table on database\n  componentDidMount = () => {\n    this.props.dispatch({ type: \"FETCH_PRODUCTS\" });\n  };\n  // Handle delete button click action to delete the selected products from table\n  handleDeleteClick = id => () => {\n    console.log(\"delete click for id\", id);\n    this.setState({\n      open: true,\n      selectedId: id\n    });\n  };\n  // shows confirmation message before deleting the product from database\n//   deleteDialog = () => {\n//     return (\n//       <Dialog\n//         open={this.state.open}\n//         onClose={this.handleClose}\n//         aria-labelledby=\"alert-dialog-title\"\n//         aria-describedby=\"alert-dialog-description\"\n//       >\n//         <DialogTitle id=\"alert-dialog-title\">{\"Please Confirm\"}</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText id=\"alert-dialog-description\">\n//             Are you sure you want to delete this project from the database?\n//           </DialogContentText>\n//         </DialogContent>\n//         <DialogActions>\n//           <Button\n//             onClick={this.handleDeleteConfirm(\"disagree\")}\n//             color=\"primary\"\n//           >\n//             Disagree\n//           </Button>\n//           <Button\n//             onClick={this.handleDeleteConfirm(\"agree\")}\n//             color=\"primary\"\n//             autoFocus\n//           >\n//             Agree\n//           </Button>\n//         </DialogActions>\n//       </Dialog>\n//     );\n//   };\n\n//   handleDeleteConfirm = confirmation => () => {\n//     if (confirmation === \"agree\") {\n//       console.log(\"clicked agree\");\n//       this.props.dispatch({\n//         type: \"DELETE_PROJECT\",\n//         payload: this.state.selectedId\n//       });\n//     }\n//     this.setState({\n//       open: false,\n//       selectedId: \"\"\n//     });\n//   };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <>\n        <Paper className={classes.root}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                <CustomTableCell>Product Name</CustomTableCell>\n                <CustomTableCell align=\"right\" />\n\n               \n              </TableRow>\n            </TableHead>\n            {JSON.stringify(this.state.props.products)}\n\n            {/* <TableBody>\n              {this.props.products.map(row => (\n                <TableRow key={row.id}>\n                  <CustomTableCell component=\"th\" scope=\"row\">\n                    {row.product_short_attr}\n                  </CustomTableCell>\n                  <CustomTableCell style={{ width: \"10%\" }} align=\"right\">\n                    <IconButton\n                      className={classes.iconHover}\n                    //   onClick={this.handleDeleteClick(row.id)}\n                      aria-label=\"Delete\"\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </CustomTableCell>\n\n                  \n                </TableRow>\n              ))}\n            </TableBody> */}\n          </Table>\n        </Paper>\n        {/* {this.deleteDialog()} */}\n      </>\n    );\n  }\n}\n\nconst mapReduxStateToProps = reduxState => {\n  return reduxState;\n};\n\nexport default withStyles(styles)(\n  connect(mapReduxStateToProps)(AdminDashboard)\n);\n"]},"metadata":{},"sourceType":"module"}